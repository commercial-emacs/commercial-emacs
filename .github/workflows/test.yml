name: CI

on:
  push:
    paths-ignore:
    - '**.rst'
    - '**.org'
    - '**.texi'
    - '**.info'
    - '**.md'
    - ChangeLog.*
    - NEWS
    branches-ignore:
    - master
    - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        gearing: [standard]
    steps:
    - run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - uses: actions/checkout@v3
    - name: paths
      run: |
        echo "$HOME/local/bin" >> $GITHUB_PATH
        echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        echo "LD_LIBRARY_PATH=$HOME/.local/lib" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$HOME/.local/lib/pkgconfig" >> $GITHUB_ENV
    - name: apt-get
      if: startsWith(runner.os, 'Linux')
      run: |
        sudo apt-get -yq update
        DEBIAN_FRONTEND=noninteractive sudo apt-get -yq install gnutls-bin sharutils dirmngr libreadline-dev libcurl4-openssl-dev libxml2-dev libssl-dev libcairo2-dev libdbus-1-dev libfreetype6-dev libgif-dev libgio3.0-cil-dev libglib2.0-dev libgmp-dev libgnutls28-dev libharfbuzz-dev libjpeg-dev libjansson-dev liblcms2-dev libselinux1-dev libxml2-dev libpng-dev librsvg2-dev libtiff-dev libx11-dev libxext-dev libxpm-dev libgtk-3-dev zlib1g-dev libxaw7-dev libgccjit-11-dev
    - name: brew-haha
      if: startsWith(runner.os, 'macOS')
      run: |
        brew install autoconf gnutls libxml2 texinfo pkg-config
        # github doc (unintelligible as of 20220428) suggests ">>" prepends to PATH.
        echo "`brew --prefix texinfo`/bin" >> $GITHUB_PATH
        echo "PKG_CONFIG_PATH=`brew --prefix libxml2`/lib/pkgconfig:$HOME/.local/lib/pkgconfig" >> $GITHUB_ENV
    - uses: actions/cache@v3
      id: cache-elisp-benchmarks
      with:
        path: elisp-benchmarks
        key: cache-elisp-benchmarks-000
    - uses: actions/checkout@v3
      if: steps.cache-elisp-benchmarks.outputs.cache-hit != 'true'
      with:
        repository: emacs-straight/elisp-benchmarks
        path: elisp-benchmarks
    - uses: actions/cache@v3
      id: cache-tree-sitter
      with:
        path: tree-sitter
        key: cache-tree-sitter-${{ runner.os }}-004
    - uses: actions/checkout@v3
      if: steps.cache-tree-sitter.outputs.cache-hit != 'true' && matrix.gearing == 'standard' && startsWith(runner.os, 'windows') != true
      with:
        repository: commercial-emacs/tree-sitter
        path: tree-sitter
        ref: v0.20.10beta3
    - uses: actions-rs/toolchain@v1
      if: matrix.gearing == 'standard' && startsWith(runner.os, 'windows') != true
      with:
          toolchain: stable
    - name: make-tree-sitter
      if: matrix.gearing == 'standard' && startsWith(runner.os, 'windows') != true
      run: |
        mkdir -p $HOME/.local
        make -C tree-sitter install-ci
    - name: make-alt-xtoolkit
      if: matrix.gearing == 'alt-x'
      run: |
        ./autogen.sh
        ./configure WERROR_CFLAGS='-Werror' --prefix=$HOME/.local --with-x-toolkit=lucid --without-cairo --without-xaw3d --without-gconf --without-libsystemd
        make -j4 -C src
    - name: make-multithread
      if: matrix.gearing == 'multithread'
      run: |
        ./autogen.sh
        ./configure $([ `uname` = 'Linux' ] && echo WERROR_CFLAGS=\'-Werror\') --prefix=$HOME/.local --enable-multithreading
        make -j4 EXCLUDE_TESTS=./src/thread-tests.el check
    - name: make-native-comp
      if: matrix.gearing == 'native-comp'
      run: |
        ./autogen.sh
        ./configure WERROR_CFLAGS='-Werror' --prefix=$HOME/.local --with-native-compilation
        make -j4
    - name: make-linux
      if: matrix.gearing == 'standard' && startsWith(runner.os, 'Linux')
      run: |
        ./autogen.sh
        ./configure WERROR_CFLAGS='-Werror' --prefix=$HOME/.local --with-tree-sitter
        make -j4 check
        ! grep -qi skipped test/src/tree-sitter-tests.log && grep -qi passed test/src/tree-sitter-tests.log && echo tree-sitter tested
    - name: make-macos
      if: matrix.gearing == 'standard' && startsWith(runner.os, 'macOS')
      run: |
        ./autogen.sh
        ./configure --prefix=$HOME/.local --with-tree-sitter
        make -j4 check
        ! grep -qi skipped test/src/tree-sitter-tests.log && grep -qi passed test/src/tree-sitter-tests.log && echo tree-sitter tested
    - uses: msys2/setup-msys2@v2
      if: startsWith(runner.os, 'windows')
      with:
        update: false
        install: >-
          base-devel
          git
          autotools
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-xpm-nox
          mingw-w64-x86_64-libtiff
          mingw-w64-x86_64-giflib
          mingw-w64-x86_64-libpng
          mingw-w64-x86_64-libjpeg-turbo
          mingw-w64-x86_64-librsvg
          mingw-w64-x86_64-libwebp
          mingw-w64-x86_64-lcms2
          mingw-w64-x86_64-jansson
          mingw-w64-x86_64-libxml2
          mingw-w64-x86_64-gnutls
          mingw-w64-x86_64-zlib
    - shell: msys2 {0}
      if: startsWith(runner.os, 'windows')
      run: |
        bash ./autogen.sh
        bash ./configure --prefix=$HOME/.local --without-dbus
        make -j4 -C src
    - name: elisp-benchmarks
      if: matrix.gearing == 'standard' && startsWith(runner.os, 'Linux')
      run: |
        src/emacs -batch -l ./elisp-benchmarks/elisp-benchmarks.el --eval "(custom-set-variables (quote (elb-runs 1)))" -f elisp-benchmarks-run
